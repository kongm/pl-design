Terminals unused in grammar

   T_NUM
   T_THEN


State 81 conflicts: 1 shift/reduce


Grammar

    0 $accept: program T_EOF

    1 program: stmt_list T_SEMICOLON

    2 stmt_list: stmt_list T_SEMICOLON stmt
    3          | stmt

    4 stmt: assignment
    5     | read
    6     | write
    7     | declaration
    8     | construct_while
    9     | construct_repeat
   10     | construct_if
   11     | block

   12 block: T_BEGIN stmt_list T_END

   13 $@1: %empty

   14 $@2: %empty

   15 construct_while: T_WHILE $@1 T_LPAR l_expr T_RPAR $@2 T_DO stmt

   16 $@3: %empty

   17 construct_repeat: T_REPEAT $@3 stmt_list T_UNTIL T_LPAR l_expr T_RPAR

   18 $@4: %empty

   19 $@5: %empty

   20 construct_if: T_IF T_LPAR l_expr T_RPAR $@4 stmt $@5 construct_else

   21 $@6: %empty

   22 construct_else: T_ELSE $@6 stmt
   23               | %empty

   24 l_expr: a_expr op_rel a_expr

   25 op_rel: T_LT
   26       | T_GT

   27 assignment: varref T_ASSIGN a_expr

   28 declaration: datatype T_ID

   29 datatype: T_DT_INT
   30         | T_DT_FLOAT

   31 a_expr: a_expr T_ADD a_term
   32       | a_expr T_SUB a_term
   33       | a_term

   34 a_term: a_term T_MUL a_fact
   35       | a_term T_DIV a_fact
   36       | a_fact

   37 a_fact: varref
   38       | T_INTEGER
   39       | T_FLOAT
   40       | '(' a_expr ')'
   41       | T_SUB a_fact
   42       | T_LITERAL_STR

   43 varref: T_ID

   44 read: T_READ varlist

   45 write: T_WRITE expr_list

   46 varlist: varlist T_COMMA varref
   47        | varref

   48 expr_list: expr_list T_COMMA a_expr
   49          | a_expr


Terminals, with rules where they appear

T_EOF (0) 0
'(' (40) 40
')' (41) 40
error (256)
T_NUM (258)
T_ASSIGN (259) 27
T_ADD (260) 31
T_SUB (261) 32 41
T_MUL (262) 34
T_DIV (263) 35
T_DT_INT (264) 29
T_DT_FLOAT (265) 30
T_LITERAL_STR (266) 42
T_READ (267) 44
T_WRITE (268) 45
T_SEMICOLON (269) 1 2
T_COMMA (270) 46 48
T_ID (271) 28 43
T_INTEGER (272) 38
T_FLOAT (273) 39
T_BEGIN (274) 12
T_END (275) 12
T_REPEAT (276) 17
T_UNTIL (277) 17
T_DO (278) 15
T_WHILE (279) 15
T_IF (280) 20
T_THEN (281)
T_ELSE (282) 22
T_LPAR (283) 15 17 20
T_RPAR (284) 15 17 20
T_LT (285) 25
T_GT (286) 26


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
stmt_list (36)
    on left: 2 3, on right: 1 2 12 17
stmt (37)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3 15 20 22
block (38)
    on left: 12, on right: 11
construct_while (39)
    on left: 15, on right: 8
$@1 (40)
    on left: 13, on right: 15
$@2 (41)
    on left: 14, on right: 15
construct_repeat (42)
    on left: 17, on right: 9
$@3 (43)
    on left: 16, on right: 17
construct_if (44)
    on left: 20, on right: 10
$@4 (45)
    on left: 18, on right: 20
$@5 (46)
    on left: 19, on right: 20
construct_else (47)
    on left: 22 23, on right: 20
$@6 (48)
    on left: 21, on right: 22
l_expr (49)
    on left: 24, on right: 15 17 20
op_rel (50)
    on left: 25 26, on right: 24
assignment (51)
    on left: 27, on right: 4
declaration (52)
    on left: 28, on right: 7
datatype (53)
    on left: 29 30, on right: 28
a_expr (54)
    on left: 31 32 33, on right: 24 27 31 32 40 48 49
a_term (55)
    on left: 34 35 36, on right: 31 32 33 34 35
a_fact (56)
    on left: 37 38 39 40 41 42, on right: 34 35 36 41
varref (57)
    on left: 43, on right: 27 37 46 47
read (58)
    on left: 44, on right: 5
write (59)
    on left: 45, on right: 6
varlist (60)
    on left: 46 47, on right: 44 46
expr_list (61)
    on left: 48 49, on right: 45 48


State 0

    0 $accept: . program T_EOF

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    program           go to state 10
    stmt_list         go to state 11
    stmt              go to state 12
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 1

   29 datatype: T_DT_INT .

    $default  reduce using rule 29 (datatype)


State 2

   30 datatype: T_DT_FLOAT .

    $default  reduce using rule 30 (datatype)


State 3

   44 read: T_READ . varlist

    T_ID  shift, and go to state 5

    varref   go to state 23
    varlist  go to state 24


State 4

   45 write: T_WRITE . expr_list

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_expr     go to state 30
    a_term     go to state 31
    a_fact     go to state 32
    varref     go to state 33
    expr_list  go to state 34


State 5

   43 varref: T_ID .

    $default  reduce using rule 43 (varref)


State 6

   12 block: T_BEGIN . stmt_list T_END

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt_list         go to state 35
    stmt              go to state 12
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 7

   17 construct_repeat: T_REPEAT . $@3 stmt_list T_UNTIL T_LPAR l_expr T_RPAR

    $default  reduce using rule 16 ($@3)

    $@3  go to state 36


State 8

   15 construct_while: T_WHILE . $@1 T_LPAR l_expr T_RPAR $@2 T_DO stmt

    $default  reduce using rule 13 ($@1)

    $@1  go to state 37


State 9

   20 construct_if: T_IF . T_LPAR l_expr T_RPAR $@4 stmt $@5 construct_else

    T_LPAR  shift, and go to state 38


State 10

    0 $accept: program . T_EOF

    T_EOF  shift, and go to state 39


State 11

    1 program: stmt_list . T_SEMICOLON
    2 stmt_list: stmt_list . T_SEMICOLON stmt

    T_SEMICOLON  shift, and go to state 40


State 12

    3 stmt_list: stmt .

    $default  reduce using rule 3 (stmt_list)


State 13

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 14

    8 stmt: construct_while .

    $default  reduce using rule 8 (stmt)


State 15

    9 stmt: construct_repeat .

    $default  reduce using rule 9 (stmt)


State 16

   10 stmt: construct_if .

    $default  reduce using rule 10 (stmt)


State 17

    4 stmt: assignment .

    $default  reduce using rule 4 (stmt)


State 18

    7 stmt: declaration .

    $default  reduce using rule 7 (stmt)


State 19

   28 declaration: datatype . T_ID

    T_ID  shift, and go to state 41


State 20

   27 assignment: varref . T_ASSIGN a_expr

    T_ASSIGN  shift, and go to state 42


State 21

    5 stmt: read .

    $default  reduce using rule 5 (stmt)


State 22

    6 stmt: write .

    $default  reduce using rule 6 (stmt)


State 23

   47 varlist: varref .

    $default  reduce using rule 47 (varlist)


State 24

   44 read: T_READ varlist .
   46 varlist: varlist . T_COMMA varref

    T_COMMA  shift, and go to state 43

    $default  reduce using rule 44 (read)


State 25

   41 a_fact: T_SUB . a_fact

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_fact  go to state 44
    varref  go to state 33


State 26

   42 a_fact: T_LITERAL_STR .

    $default  reduce using rule 42 (a_fact)


State 27

   38 a_fact: T_INTEGER .

    $default  reduce using rule 38 (a_fact)


State 28

   39 a_fact: T_FLOAT .

    $default  reduce using rule 39 (a_fact)


State 29

   40 a_fact: '(' . a_expr ')'

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_expr  go to state 45
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 30

   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term
   49 expr_list: a_expr .

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47

    $default  reduce using rule 49 (expr_list)


State 31

   33 a_expr: a_term .
   34 a_term: a_term . T_MUL a_fact
   35       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 48
    T_DIV  shift, and go to state 49

    $default  reduce using rule 33 (a_expr)


State 32

   36 a_term: a_fact .

    $default  reduce using rule 36 (a_term)


State 33

   37 a_fact: varref .

    $default  reduce using rule 37 (a_fact)


State 34

   45 write: T_WRITE expr_list .
   48 expr_list: expr_list . T_COMMA a_expr

    T_COMMA  shift, and go to state 50

    $default  reduce using rule 45 (write)


State 35

    2 stmt_list: stmt_list . T_SEMICOLON stmt
   12 block: T_BEGIN stmt_list . T_END

    T_SEMICOLON  shift, and go to state 51
    T_END        shift, and go to state 52


State 36

   17 construct_repeat: T_REPEAT $@3 . stmt_list T_UNTIL T_LPAR l_expr T_RPAR

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt_list         go to state 53
    stmt              go to state 12
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 37

   15 construct_while: T_WHILE $@1 . T_LPAR l_expr T_RPAR $@2 T_DO stmt

    T_LPAR  shift, and go to state 54


State 38

   20 construct_if: T_IF T_LPAR . l_expr T_RPAR $@4 stmt $@5 construct_else

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    l_expr  go to state 55
    a_expr  go to state 56
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 39

    0 $accept: program T_EOF .

    $default  accept


State 40

    1 program: stmt_list T_SEMICOLON .
    2 stmt_list: stmt_list T_SEMICOLON . stmt

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    $default  reduce using rule 1 (program)

    stmt              go to state 57
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 41

   28 declaration: datatype T_ID .

    $default  reduce using rule 28 (declaration)


State 42

   27 assignment: varref T_ASSIGN . a_expr

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_expr  go to state 58
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 43

   46 varlist: varlist T_COMMA . varref

    T_ID  shift, and go to state 5

    varref  go to state 59


State 44

   41 a_fact: T_SUB a_fact .

    $default  reduce using rule 41 (a_fact)


State 45

   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term
   40 a_fact: '(' a_expr . ')'

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47
    ')'    shift, and go to state 60


State 46

   31 a_expr: a_expr T_ADD . a_term

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_term  go to state 61
    a_fact  go to state 32
    varref  go to state 33


State 47

   32 a_expr: a_expr T_SUB . a_term

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_term  go to state 62
    a_fact  go to state 32
    varref  go to state 33


State 48

   34 a_term: a_term T_MUL . a_fact

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_fact  go to state 63
    varref  go to state 33


State 49

   35 a_term: a_term T_DIV . a_fact

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_fact  go to state 64
    varref  go to state 33


State 50

   48 expr_list: expr_list T_COMMA . a_expr

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_expr  go to state 65
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 51

    2 stmt_list: stmt_list T_SEMICOLON . stmt

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt              go to state 57
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 52

   12 block: T_BEGIN stmt_list T_END .

    $default  reduce using rule 12 (block)


State 53

    2 stmt_list: stmt_list . T_SEMICOLON stmt
   17 construct_repeat: T_REPEAT $@3 stmt_list . T_UNTIL T_LPAR l_expr T_RPAR

    T_SEMICOLON  shift, and go to state 51
    T_UNTIL      shift, and go to state 66


State 54

   15 construct_while: T_WHILE $@1 T_LPAR . l_expr T_RPAR $@2 T_DO stmt

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    l_expr  go to state 67
    a_expr  go to state 56
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 55

   20 construct_if: T_IF T_LPAR l_expr . T_RPAR $@4 stmt $@5 construct_else

    T_RPAR  shift, and go to state 68


State 56

   24 l_expr: a_expr . op_rel a_expr
   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47
    T_LT   shift, and go to state 69
    T_GT   shift, and go to state 70

    op_rel  go to state 71


State 57

    2 stmt_list: stmt_list T_SEMICOLON stmt .

    $default  reduce using rule 2 (stmt_list)


State 58

   27 assignment: varref T_ASSIGN a_expr .
   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47

    $default  reduce using rule 27 (assignment)


State 59

   46 varlist: varlist T_COMMA varref .

    $default  reduce using rule 46 (varlist)


State 60

   40 a_fact: '(' a_expr ')' .

    $default  reduce using rule 40 (a_fact)


State 61

   31 a_expr: a_expr T_ADD a_term .
   34 a_term: a_term . T_MUL a_fact
   35       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 48
    T_DIV  shift, and go to state 49

    $default  reduce using rule 31 (a_expr)


State 62

   32 a_expr: a_expr T_SUB a_term .
   34 a_term: a_term . T_MUL a_fact
   35       | a_term . T_DIV a_fact

    T_MUL  shift, and go to state 48
    T_DIV  shift, and go to state 49

    $default  reduce using rule 32 (a_expr)


State 63

   34 a_term: a_term T_MUL a_fact .

    $default  reduce using rule 34 (a_term)


State 64

   35 a_term: a_term T_DIV a_fact .

    $default  reduce using rule 35 (a_term)


State 65

   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term
   48 expr_list: expr_list T_COMMA a_expr .

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47

    $default  reduce using rule 48 (expr_list)


State 66

   17 construct_repeat: T_REPEAT $@3 stmt_list T_UNTIL . T_LPAR l_expr T_RPAR

    T_LPAR  shift, and go to state 72


State 67

   15 construct_while: T_WHILE $@1 T_LPAR l_expr . T_RPAR $@2 T_DO stmt

    T_RPAR  shift, and go to state 73


State 68

   20 construct_if: T_IF T_LPAR l_expr T_RPAR . $@4 stmt $@5 construct_else

    $default  reduce using rule 18 ($@4)

    $@4  go to state 74


State 69

   25 op_rel: T_LT .

    $default  reduce using rule 25 (op_rel)


State 70

   26 op_rel: T_GT .

    $default  reduce using rule 26 (op_rel)


State 71

   24 l_expr: a_expr op_rel . a_expr

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    a_expr  go to state 75
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 72

   17 construct_repeat: T_REPEAT $@3 stmt_list T_UNTIL T_LPAR . l_expr T_RPAR

    T_SUB          shift, and go to state 25
    T_LITERAL_STR  shift, and go to state 26
    T_ID           shift, and go to state 5
    T_INTEGER      shift, and go to state 27
    T_FLOAT        shift, and go to state 28
    '('            shift, and go to state 29

    l_expr  go to state 76
    a_expr  go to state 56
    a_term  go to state 31
    a_fact  go to state 32
    varref  go to state 33


State 73

   15 construct_while: T_WHILE $@1 T_LPAR l_expr T_RPAR . $@2 T_DO stmt

    $default  reduce using rule 14 ($@2)

    $@2  go to state 77


State 74

   20 construct_if: T_IF T_LPAR l_expr T_RPAR $@4 . stmt $@5 construct_else

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt              go to state 78
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 75

   24 l_expr: a_expr op_rel a_expr .
   31 a_expr: a_expr . T_ADD a_term
   32       | a_expr . T_SUB a_term

    T_ADD  shift, and go to state 46
    T_SUB  shift, and go to state 47

    $default  reduce using rule 24 (l_expr)


State 76

   17 construct_repeat: T_REPEAT $@3 stmt_list T_UNTIL T_LPAR l_expr . T_RPAR

    T_RPAR  shift, and go to state 79


State 77

   15 construct_while: T_WHILE $@1 T_LPAR l_expr T_RPAR $@2 . T_DO stmt

    T_DO  shift, and go to state 80


State 78

   20 construct_if: T_IF T_LPAR l_expr T_RPAR $@4 stmt . $@5 construct_else

    $default  reduce using rule 19 ($@5)

    $@5  go to state 81


State 79

   17 construct_repeat: T_REPEAT $@3 stmt_list T_UNTIL T_LPAR l_expr T_RPAR .

    $default  reduce using rule 17 (construct_repeat)


State 80

   15 construct_while: T_WHILE $@1 T_LPAR l_expr T_RPAR $@2 T_DO . stmt

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt              go to state 82
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 81

   20 construct_if: T_IF T_LPAR l_expr T_RPAR $@4 stmt $@5 . construct_else

    T_ELSE  shift, and go to state 83

    T_ELSE    [reduce using rule 23 (construct_else)]
    $default  reduce using rule 23 (construct_else)

    construct_else  go to state 84


State 82

   15 construct_while: T_WHILE $@1 T_LPAR l_expr T_RPAR $@2 T_DO stmt .

    $default  reduce using rule 15 (construct_while)


State 83

   22 construct_else: T_ELSE . $@6 stmt

    $default  reduce using rule 21 ($@6)

    $@6  go to state 85


State 84

   20 construct_if: T_IF T_LPAR l_expr T_RPAR $@4 stmt $@5 construct_else .

    $default  reduce using rule 20 (construct_if)


State 85

   22 construct_else: T_ELSE $@6 . stmt

    T_DT_INT    shift, and go to state 1
    T_DT_FLOAT  shift, and go to state 2
    T_READ      shift, and go to state 3
    T_WRITE     shift, and go to state 4
    T_ID        shift, and go to state 5
    T_BEGIN     shift, and go to state 6
    T_REPEAT    shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_IF        shift, and go to state 9

    stmt              go to state 86
    block             go to state 13
    construct_while   go to state 14
    construct_repeat  go to state 15
    construct_if      go to state 16
    assignment        go to state 17
    declaration       go to state 18
    datatype          go to state 19
    varref            go to state 20
    read              go to state 21
    write             go to state 22


State 86

   22 construct_else: T_ELSE $@6 stmt .

    $default  reduce using rule 22 (construct_else)
